on:
  workflow_dispatch:
  push:
    branches:
      - main

name: apply

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: false
      - uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: opentofu/setup-opentofu@v1
      - run: task install
      - run: task lint-check

  apply:
    runs-on: ubuntu-latest
    needs: lint
    env:
      HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_R2_ENDPOINT: ${{ vars.CLOUDFLARE_R2_ENDPOINT }}
      TF_VAR_dsm_host: ${{ vars.DSM_HOST }}
      TF_VAR_dsm_user: ${{ vars.DSM_USER }}
      TF_VAR_dsm_password: ${{ secrets.DSM_PASSWORD }}
      TF_VAR_dsm_otp_secret: ${{ secrets.DSM_OTP_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          tags: tag:github
      - uses: opentofu/setup-opentofu@v1
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CLOUDFLARE_R2_KEY }}
          aws-secret-access-key: ${{ secrets.CLOUDFLARE_R2_SECRET }}
          aws-region: auto
        continue-on-error: true
      - run: ./bin/get-tfstate.sh
        continue-on-error: true
      - run: |
          sed -i 's/PUT_YOUR_BOUNCER_KEY_HERE_OR_IT_WILL_NOT_WORK/${{ secrets.CROWDSEC_API_KEY }}/g' root/var/lib/containers/traefik/etc/dynamic_config.yml
          sed -i 's/PUT_YOUR_BOUNCER_KEY_HERE_OR_IT_WILL_NOT_WORK/${{ secrets.CROWDSEC_API_KEY }}/g' root/var/lib/containers/crowdsec-firewall-bouncer/crowdsec-firewall-bouncer.yaml
      - run: tofu init
      - run: tofu validate -no-color
      - run: tofu plan -out=out.tfplan
      - run: tofu apply -auto-approve out.tfplan
      - run: ./bin/put-tfstate.sh
